unscaled_cc <=cc
do i in 1:4 {
unscaled_cc[,i]=cc[,i]*(b$scale)[i]+(b$center)[i]
}
unscaled_cc <=cc
for (i in 1:4) {
unscaled_cc[,i]=cc[,i]*(b$scale)[i]+(b$center)[i]
}
head(unscaled_cc)
head(a)
dim(loading)
loading
new_var=loading%*%var%*%t(loading)
var
dim(var)
var<-vcov(result2)
var
new_var=loading%*%var[2:5,2:5]%*%t(loading)
new_var
require(graphics)
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
t<-pt(new_par/diag(new_var),df=n-5)
t
t<-pt(new_par/sqrt(diag(new_var)),df=n-5)
t
new_par
diag(new_var)
sqrt(diag(new_var))
require(graphics)
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
t<-1-pt(new_par/sqrt(diag(new_var)),df=n-5)
t
new_par
new_par/sqrt(diag(new_var))
t<-c(1,1,1,1)-pt(new_par/sqrt(diag(new_var)),df=n-5)
t
new_par
new_par/sqrt(diag(new_var))
pt(new_par/sqrt(diag(new_var)),df=n-5)
t<-c(1,1,1,1)-pt(abs(new_par)/sqrt(diag(new_var)),df=n-5)
t
new_par
summary(result)
cor(a)
set.seed(666)
n=300
x1 = rnorm(n)           # some continuous variables
x2 = rnorm(n)
x3 = rnorm(n)           # some continuous variables
x4 = rnorm(n)
x11 <- 0.2*x1 + 0.8*x2
x22 <- x2
x33 <- 0.3*x3+0.7*x2
x44 <- 0.5*x4 - x2
z = 1 + 2*x11 + 3*x22 -x33 + 0.5*x44        # linear combination with a bias
pr = 1/(1+exp(-z))         # pass through an inv-logit function
y = rbinom(n,1,pr)      # bernoulli response variable
a=data.frame(x11=x11,x22=x22,x33=x33,x44=x44)
cor(a)
#now feed it to glm:
df = data.frame(y=y,x11=x11,x22=x22,x33=x33,x44=x44)
result <-glm( y~x11+x22+x33+x44,data=df,family="binomial")
result
summary(result)
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3], xx4=b$scores[,4])
result2 <-glm( y~xx1+xx2+xx3+xx4,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=5)
new_par=par[2:5]%*%t(loading)
new_var=loading%*%var[2:5,2:5]%*%t(loading)
t<-c(1,1,1,1)-pt(abs(new_par)/sqrt(diag(new_var)),df=n-5)
new_par
t
result$coefficient
vcov(result)
t0<-c(1,1,1,1)-pt(abs(result$coefficient)/sqrt(diag(vcov(result))),df=n-5)
t0<-c(1,1,1,1,1)-pt(abs(result$coefficient)/sqrt(diag(vcov(result))),df=n-5)
t0
summary(result)
t0<-c(1,1,1,1,1)-pt(abs(result$coefficient)/sqrt(diag(vcov(result))*(n-5)),df=n-5)
t0
t0<-c(1,1,1,1,1)-pt(abs(result$coefficient)/sqrt(diag(vcov(result))),df=n-5,lower.tail=TRUE)
t0
t0<-2*(c(1,1,1,1,1)-pt(abs(result$coefficient)/sqrt(diag(vcov(result))),df=n-5,lower.tail=TRUE))
t0
pt(3.66,df=300)
pt(1.073,df=300)
1-pt(1.073,df=300)
1-2*pt(1.073,df=300)
pnrom(1.073,lower.tail=TRUE,df=300)
pnorm(1.073,lower.tail=TRUE,df=300)
pnorm(1.073,lower.tail=TRUE)
1-pnorm(1.073,lower.tail=TRUE)
t<-c(1,1,1,1)-2*pnorm(abs(new_par)/sqrt(diag(new_var)),lower.tail=TRUE)
t
pnorm(abs(new_par)/sqrt(diag(new_var)),lower.tail=TRUE)
1-pnorm(1.073,lower.tail=TRUE)
1-2*pnorm(1.073,lower.tail=TRUE)
1-pnorm(1.073,lower.tail=TRUE)
1-pnorm(1.073,lower.tail=FALSE)
1-2*pnorm(1.073,lower.tail=FALSE)
summary(result)
pnorm(1.073)
1-pnorm(1.073)
t0<-2*(c(1,1,1,1,1)-2*pnorm(abs(result$coefficient)/sqrt(diag(vcov(result)))))
t0
t0<-2*(c(1,1,1,1,1)-pnorm(abs(result$coefficient)/sqrt(diag(vcov(result)))))
t0
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3], xx4=b$scores[,4])
result2 <-glm( y~xx1+xx2+xx3+xx4,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=5)
new_par=par[2:5]%*%t(loading)
new_var=loading%*%var[2:5,2:5]%*%t(loading)
t<-2*(c(1,1,1,1)-pnorm(abs(new_par)/sqrt(diag(new_var))))
t
new_par
summary(b)
plot(b)
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3])
result2 <-glm( y~xx1+xx2+xx3,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=5)
par
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=4)
new_par=par[2:4]%*%t(loading)
loading
loading_part=loading[,1:3]
new_par=par[2:4]%*%t(loading_part)
new_var=loading_part%*%var[2:4,2:4]%*%t(loading_part)
t<-2*(c(1,1,1,1)-pnorm(abs(new_par)/sqrt(diag(new_var))))
new_par
t
summary(result)
n=500
x1 = rnorm(n)           # some continuous variables
x2 = rnorm(n)
x3 = rnorm(n)           # some continuous variables
x4 = rnorm(n)
x11 <- 0.2*x1 + 0.8*x2
x22 <- x2
x33 <- 0.3*x3+0.7*x2
x44 <- 0.5*x4 - x2
z = 1 + 2*x11 + 3*x22 -x33 + 0.5*x44        # linear combination with a bias
pr = 1/(1+exp(-z))         # pass through an inv-logit function
y = rbinom(n,1,pr)      # bernoulli response variable
a=data.frame(x11=x11,x22=x22,x33=x33,x44=x44)
cor(a)
#now feed it to glm:
df = data.frame(y=y,x11=x11,x22=x22,x33=x33,x44=x44)
result <-glm( y~x11+x22+x33+x44,data=df,family="binomial")
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
#doing real analysis
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3])
result2 <-glm( y~xx1+xx2+xx3,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=4)
loading_part=loading[,1:3]
new_par=par[2:4]%*%t(loading_part)
new_var=loading_part%*%var[2:4,2:4]%*%t(loading_part)
t<-2*(c(1,1,1,1)-pnorm(abs(new_par)/sqrt(diag(new_var))))
new_par
t
reresult$coefficient
result$coefficients
true_par=c(2,3,-1,0.5)
summary(result)
n=300
x1 = rnorm(n)           # some continuous variables
x2 = rnorm(n)
x3 = rnorm(n)           # some continuous variables
x4 = rnorm(n)
x11 <- 0.2*x1 + 0.8*x2
x22 <- x2
x33 <- 0.3*x3+0.7*x2
x44 <- 0.5*x4 - x2
z = 1 + 2*x11 + 3*x22 -x33 + 0.5*x44        # linear combination with a bias
pr = 1/(1+exp(-z))         # pass through an inv-logit function
y = rbinom(n,1,pr)      # bernoulli response variable
a=data.frame(x11=x11,x22=x22,x33=x33,x44=x44)
cor(a)
#now feed it to glm:
df = data.frame(y=y,x11=x11,x22=x22,x33=x33,x44=x44)
result <-glm( y~x11+x22+x33+x44,data=df,family="binomial")
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3])
result2 <-glm( y~xx1+xx2+xx3,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=4)
loading_part=loading[,1:3]
new_par=par[2:4]%*%t(loading_part)
new_var=loading_part%*%var[2:4,2:4]%*%t(loading_part)
t<-2*(c(1,1,1,1)-pnorm(abs(new_par)/sqrt(diag(new_var))))
t
summary(result)
t
new_par
set.seed(666)
n=300
x1 = rnorm(n)           # some continuous variables
x2 = rnorm(n)
x3 = rnorm(n)           # some continuous variables
x4 = rnorm(n)
x11 <- 0.2*x1 + 0.8*x2
x22 <- x2
x33 <- 0.3*x3+0.7*x2
x44 <- 0.5*x4 - x2
z = 1 + 2*x11 + 3*x22 -x33 + 0.5*x44        # linear combination with a bias
pr = 1/(1+exp(-z))         # pass through an inv-logit function
y = rbinom(n,1,pr)      # bernoulli response variable
a=data.frame(x11=x11,x22=x22,x33=x33,x44=x44)
cor(a)
#now feed it to glm:
df = data.frame(y=y,x11=x11,x22=x22,x33=x33,x44=x44)
result <-glm( y~x11+x22+x33+x44,data=df,family="binomial")
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
summary(result)
b=princomp(a, cor = TRUE,scores=TRUE)
loading <-b$loadings
df2 <-data.frame(y=y, xx1=b$scores[,1], xx2=b$scores[,2], xx3=b$scores[,3])
result2 <-glm( y~xx1+xx2+xx3,data=df2,family="binomial")
par<-result2$coefficients
var<-vcov(result2)
par=matrix(par,ncol=1,nrow=4)
loading_part=loading[,1:3]
new_par=par[2:4]%*%t(loading_part)
new_var=loading_part%*%var[2:4,2:4]%*%t(loading_part)
t<-2*(c(1,1,1,1)-pnorm(abs(new_par)/sqrt(diag(new_var))))
result$coefficients
t
q()
install.packages("gbm")
library("gbm", lib.loc="~/R/win-library/3.2")
install.packages("tm")
library("tm", lib.loc="~/R/win-library/3.2")
?readPDF
uri <- sprintf("file://%s", system.file(file.path("doc", "tm.pdf"), package = "tm"))
if(all(file.exists(Sys.which(c("pdfinfo", "pdftotext"))))) {
pdf <- readPDF(control = list(text = "-layout"))(elem = list(uri = uri),
language = "en",
id = "id1")
content(pdf)[1:13]
}
VCorpus(URISource(uri, mode = ""),
readerControl = list(reader = readPDF(engine = "ghostscript")))
VCorpus(URISource(uri, mode = ""),
readerControl = list(reader = readPDF(engine = "ghostscript")))
txt <- system.file("texts", "txt", package = "tm")
(ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),
+ readerControl = list(language = "lat")))
uri <- sprintf("file://%s", system.file(file.path("doc", "tm.pdf"), package = "tm"))
if(all(file.exists(Sys.which(c("pdfinfo", "pdftotext"))))) {
pdf <- readPDF(control = list(text = "-layout"))(elem = list(uri = uri),
language = "en",
id = "id1")
content(pdf)[1:13]
}
VCorpus(URISource(uri, mode = ""),
readerControl = list(reader = readPDF(engine = "ghostscript")))
txt <- system.file("texts", "txt", package = "tm")
(ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),
+ readerControl = list(language = "lat")))
install.packages("magrittr")
install.packages("plyr")
install.packages("dplyr")
install.packages("stringr")
install.packages("RODBC")
install.packages("readxl")
install.packages("haven")
install.packages("sqldf")
install.packages("gbm")
install.packages("rtf")
install.packages("RDCOMClient")
q()
q()
install.packages("ROracle")
install.packages("ROracle")
install.packages("ROracle",type = "source")
install.packages("lubridate")
install.packages("magrittr")
install.packages("plyr")
install.packages("dplyr")
install.packages("stringr")
install.packages("RODBC")
install.packages("readxl")
install.packages("haven")
install.packages("sqldf")
install.packages("gbm")
install.packages("rtf")
install.packages("RDCOMClient")
install.packages("tcltk2")
source('S:/Project_Directory_CCU/CCU_VBA/Travel/Countries/US/DailyChecks/redoCode_v7a.R', echo=TRUE)
source('S:/Project_Directory_CCU/CCU_VBA/Travel/Countries/US/DailyChecks/redoCode_v7a.R', echo=TRUE)
source('S:/Project_Directory_CCU/CCU_VBA/Travel/Countries/US/DailyChecks/redoCode_v7a.R', echo=TRUE)
source('S:/Project_Directory_CCU/CCU_VBA/Travel/Countries/US/DailyChecks/redoCode_v7a.R', echo=TRUE)
?which
performance[numeric.cols] <- lapply(performance[numeric.cols], removePercent)
getwd()
?setwd
## ----load-data-----------------------------------------------------------
data.path <- "../data"
datafile <- file.path(data.path, "performance.csv")
performance <- read.csv(datafile, stringsAsFactors=FALSE)
## ----load-data-str, output.max=15----------------------------------------
str(performance) ## look at the data
## ----reformat-data-------------------------------------------------------
## Date Not character!
performance$Click.Date <- as.Date(performance$Click.Date, format='%m/%d/%y')
## Numeric, not chararacter!
numeric.cols <- c('Engine.CTR', 'LP.CTR')
removePercent <- function(x) as.numeric(sub('%', '', x))/100
performance[numeric.cols] <- lapply(performance[numeric.cols], removePercent)
setwd(E:/My Documents/Training/Revolution R/Intro to R)
setwd("E:/My Documents/Training/Revolution R/Intro to R")
data.path <- "../data"
datafile <- file.path(data.path, "performance.csv")
performance <- read.csv(datafile, stringsAsFactors=FALSE)
## ----load-data-str, output.max=15----------------------------------------
str(performance) ## look at the data
## ----reformat-data-------------------------------------------------------
## Date Not character!
performance$Click.Date <- as.Date(performance$Click.Date, format='%m/%d/%y')
## Numeric, not chararacter!
numeric.cols <- c('Engine.CTR', 'LP.CTR')
removePercent <- function(x) as.numeric(sub('%', '', x))/100
performance[numeric.cols] <- lapply(performance[numeric.cols], removePercent)
getwd()
data.path <- "/data"
datafile <- file.path(data.path, "performance.csv")
performance <- read.csv(datafile, stringsAsFactors=FALSE)
data.path <- "../data"
datafile <- file.path(data.path, "performance.csv")
performance <- read.csv(datafile, stringsAsFactors=FALSE)
setwd("E:/My Documents/Training/Revolution R/Intro to R/data")
data.path <- "../data"
datafile <- file.path(data.path, "performance.csv")
performance <- read.csv(datafile, stringsAsFactors=FALSE)
performance$Click.Date <- as.Date(performance$Click.Date, format='%m/%d/%y')
numeric.cols <- c('Engine.CTR', 'LP.CTR')
removePercent <- function(x) as.numeric(sub('%', '', x))/100
performance[numeric.cols] <- lapply(performance[numeric.cols], removePercent)
dollar.cols <- c('Cost', 'Rev', 'Margin')
removeDollar <- function(x) as.numeric(gsub('[\\$ )]', '', sub("\\(", "-", x)))
?gsub
str(performance) ## look at the data
numeric.cols <- which(sapply(performance, is.numeric))
plot(performance[numeric.cols[1:3]])
plot(performance[dollar.cols])
dollar.cols <- c('Cost', 'Rev', 'Margin')
removeDollar <- function(x) as.numeric(gsub('[\\$ )]', '', sub("\\(", "-", x)))
plot(performance[dollar.cols])
removeDollar <- function(x) as.numeric(gsub('[\\$ )]', '', sub("\\(", "-", x)))
performance[dollar.cols] <- lapply(performance[dollar.cols], removeDollar)
plot(performance[dollar.cols])
perf <- performance[performance$Cost < 100,]
perf <- performance[performance$Cost < 100,]
plot(perf[dollar.cols])
perf$Origin.Code <- factor(perf$Origin.Code)
originCol <- c("blue", "red", "green")[perf$Origin.Code]
perf$Origin.Code
originCol
plot(perf[, 15:ncol(perf)], col=originCol, pch=19)
library(ggplot2)
install.packages("installr")
updateR()
library(installr)
updateR()
updateR()
library(ggplot2)
ggplot(perf, aes(x=Rev, y=ROI, colour=Origin.Code)) +
geom_point(na.rm=TRUE, size=4) +
theme(legend.justification=c(1,1), legend.position=c(1,1))
1:10
(1:10)^2
letters
length(month.name)
x <- 1:10
x
sum(x)
class(x)
x <- c(1, 1, 2, 3, 5, 8)
sum(x)
y <- c(x, 13, 21)
y
authors <- c("Ross", "Robert")
authors
length(authors)
paste(authors, c("Ihaka", "Gentleman"))
paste("row", 1:5, sep="_")
paste("row", 1:5)
paste0("row", 1:5)
authors == "Ross"
1:10 > 7
sum(1:10 > 7)
letters[5]
letters[1:5]
letters[c(1, 3, 5)]
letters[-1]
letters[-(1:5)]
head(letters)
tail(letters)
x <- 1:5
names(x) <- letters[1:5]
x
x["c"]
x[c("c", "d")]
mtcars$cyl
as.factor(mtcars$cyl)
matrix(1:9, nrow=3, ncol=3)
mat <- matrix(1:25, nrow=5)
mat
mat[2:4, 3:5]
mat[-3, -4]
mat[-3, ]
array.one <- array( 1:12, dim = c(3,4))
array.two <- array( 1:24, dim = c(3,4,2))
array.two[,,1]
colnames(mat) <- paste("col", 1:5, sep="")
rownames(mat) <- paste0("row", 1:5)
mat
mat[c("row2","row3"),c("col1","col5")]
xl <- list(
num = 1:10,
char = letters[1:15],
log = rep(c(TRUE,FALSE), 10)
)
xl
out.single <- xl[1]
length(out.single)
class(out.single)
out.double <- xl[[1]]
out.double
xl
length(out.double)
class(out.double)
head(mtcars)
str(mtcars)
names(mtcars)
colnames(mtcars)
rownames(mtcars)
dat <- data.frame(
char = letters[1:5],
num  = 1:5,
log  =  c(TRUE,FALSE,TRUE,FALSE,TRUE)
)
head(dat)
class(mtcars)
typeof(mtcars)
cars$speed[1]
head(cars)
x <- list(2, "a", "b", TRUE)
x[[2]]
x<-1:4
y<-2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]==4
performance <- read.csv("hw1_data.csv"")
)
hw1 <- read.csv("hw1_data.csv")
hw1 <- read.csv("hw1_data.csv")
setwd("E:/My Documents/Training/Revolution R/Intro to R/")
hw1 <- read.csv("hw1_data.csv")
setwd("E:/My Documents/Training/Revolution R/")
hw1 <- read.csv("hw1_data.csv")
colnames(hw1)
head(hw1)
summary(hw1)
str(hw1)
tail(hw1)
hw1$ozone[47]
hw1$ozone[1:50]
hw1$ozone
hw1$Ozone[47]
summary(hw1$Ozone)
mean(hw1$Ozone,na.rm=TRUE)
temp_set<-hw1[Ozone>31,Temp?90]
temp_set<-hw1[Ozone>31,Temp>90]
temp_set<-subset(hw1,c(Ozone>31,Temp>90))
mean(temp_set$Solar.R)
temp_set
mean(temp_set$Solar.R,na.rm=TRUE)
temp_set<-subset(hw1,Ozone>31&Temp>90)
mean(temp_set$Solar.R,na.rm=TRUE)
mean(subset(h2,Month==6),na.rm=TRUE)
mean(subset(hw1,Month==6),na.rm=TRUE)
see=subset(hw1,Month==6)
see
mean(see$Temp,na.rm=TRUE)
see2=subset(hw1,Month==5)
see2
max(see2$Ozone,na.rm=TRUE)
